@model CampusAcademiaApp.TblTeacher

@{
    ViewBag.Title = "signUpTeacher";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}
@Styles.Render("~/Content/css")
@{
    //get all department list to show in dropdown
    DAO oDAO = new DAO(MvcApplication.SF.GetCurrentSession());
    IList<TblDepartment> deptList = oDAO.ListDepartments();
    SelectList allDept = new SelectList(deptList, Constants.allModelProperties.DeptId, Constants.allModelProperties.DeptName);

    SelectListItem visting = new SelectListItem
    {
        Value = "Visting",
        Text = "Visting"
    };

    SelectListItem permanent = new SelectListItem
    {
        Value = "Permanent",
        Text = "Permanent"
    };

    IList<SelectListItem> jobstatus = new List<SelectListItem>();
    jobstatus.Add(visting);
    jobstatus.Add(permanent);
    SelectList statuslist = new SelectList(jobstatus, "Value", "Text");

    SelectListItem lecturer = new SelectListItem
    {
        Value = "Lecturer",
        Text = "Lecturer"
    };

    SelectListItem assistantProfessor = new SelectListItem
    {
        Value = "Assistant Professor",
        Text = "Assistant Professor"
    };
    SelectListItem associateProfessor = new SelectListItem
    {
        Value = "Associate Professor",
        Text = "Associate Professor"
    };
    IList<SelectListItem> designation = new List<SelectListItem>();
    designation.Add(lecturer);
    designation.Add(assistantProfessor);
    designation.Add(associateProfessor);
    SelectList designationlist = new SelectList(designation, "Value", "Text");
    
    }
@if (!string.IsNullOrEmpty(ViewBag.Message))
{
    <div class="alert alert-danger result">
        <p><span class="glyphicon glyphicon-warning-sign"></span> @ViewBag.Message</p>
    </div>
}
<div class="panel panel-info">

    <div class="panel-heading">
        <h2 class="text-center">Sign Up</h2>
    </div>
    <div class="panel-body" style="min-height:700px">
        @using (Html.BeginForm("signUpTeacher", "AdminHome", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal col-lg-offset-3">
               
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.TeacherFirstname, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.TeacherFirstname, new { @class = "form-control", @style = "width:300px;", @placeholder = "First Name" })
                        @Html.ValidationMessageFor(model => model.TeacherFirstname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TeacherLastname, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.TeacherLastname, new { @class = "form-control", @style = "width:300px;", @placeholder = "Last Name" })
                        @Html.ValidationMessageFor(model => model.TeacherLastname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TeacherGender, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.Label("Male", new { @class = "control-label" })
                        @Html.RadioButtonFor(model => model.TeacherGender, "Male", new { @Checked = "checked" })
                        @Html.Label("Female", new { @class = "control-label" })
                        @Html.RadioButtonFor(model => model.TeacherGender, "Female")
                        @Html.ValidationMessageFor(model => model.TeacherGender)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TeacherDob, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.TeacherDob, new { @class = "form-control", @style = "width:300px;background:white;", @id = "datepiker", @readonly = "true" })
                        @Html.ValidationMessageFor(model => model.TeacherDob, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TeacherEmail, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.TeacherEmail, new { @class = "form-control", @style = "width:300px;", @placeholder = "Email" })
                        @Html.ValidationMessageFor(model => model.TeacherEmail, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TeacherPhonenumber, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.TeacherPhonenumber, new { @class = "form-control", @style = "width:300px;", @placeholder = "Mobile No"  })
                        @Html.ValidationMessageFor(model => model.TeacherPhonenumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TeacherAddress, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.TeacherAddress, new { @class = "form-control", @style = "width:300px;", @placeholder = "Address"  })
                         @Html.ValidationMessageFor(model => model.TeacherAddress, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.TeacherUserName, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.TeacherUserName, new { @class = "form-control", @style = "width:300px;", @placeholder = "User Name", @id = "username" })
                        <p style="display:none" id="loaderIcon"><i class="fa fa-refresh fa-spin"></i></p>
                        <span id="user-availability-status"></span>
                         @Html.ValidationMessageFor(model => model.TeacherUserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TeacherPassword, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.PasswordFor(model => model.TeacherPassword, new { @class = "form-control", @style = "width:300px;" })
                        @Html.ValidationMessageFor(model => model.TeacherPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.DepartmentId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.DepartmentId, allDept, "--Select Department--", new { @class = "form-control", @style = "width:300px;height:38px;text-align:center;", @id = "ddlDepartment" })
                         @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.TeacherDesignation, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.TeacherDesignation, designationlist, "--Select Designation--", new { @class = "form-control", @style = "width:300px;height:38px;text-align:center;" })
                        @Html.ValidationMessageFor(model => model.TeacherDesignation, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.TeacherJobStatus, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.TeacherJobStatus, statuslist, "--Select Status--", new { @class = "form-control", @style = "width:300px;height:38px;text-align:center;" })
                        @Html.ValidationMessageFor(model => model.TeacherJobStatus, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TeacherIsHOD, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.Label("Yes", new { @class = "control-label" })
                        @Html.RadioButtonFor(model => model.TeacherIsHOD, "Yes")
                        @Html.Label("NO", new { @class = "control-label" })
                        @Html.RadioButtonFor(model => model.TeacherIsHOD, "NO", new { @Checked = "checked" })
                        @Html.ValidationMessageFor(model => model.TeacherIsHOD)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.TeacherImage, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <img id="previewHolder" alt="Your Image" width="150px" height="150px" class="img-circle" />
                        <br />
                        <input type="file" id="TeacherImage" name="TeacherImage" accept="image/*" />
                        @Html.ValidationMessageFor(model => model.TeacherImage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-3 col-md-9">
                        <input type="submit" value="Sign Up" class="btn btn-success" />
                    </div>
                </div>
            </div>
        }
        </div>
    </div>
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
           

            <script>
                $.noConflict();
                jQuery(".result").fadeOut(10000);
                jQuery(document).ready(function () {

                    jQuery('#previewHolder').hide();
                    jQuery("#loaderIcon").hide;

                    jQuery("#datepiker").datepicker({
                        changeMonth: true,
                        changeYear: true,
                        showAnim: "clip",
                        dateFormat:"dd/mm/yy"
                    });
                    jQuery("#username").blur(function () {
                        jQuery("#loaderIcon").show();
                        jQuery.ajax({
                            url: '@Url.Action("checkTeacherUserName", "AdminHome")',
                            data: { username: jQuery(this).val() },
                            type: "POST",
                            success: function (data) {
                                if (data == 'Required') {
                                    var result = "<span class='text-danger'><b>User Name Required.</b></span>";
                                }
                                else {
                                    if (data != '') {
                                        jQuery('#username').val('');
                                        var result = "<span class='text-danger glyphicon glyphicon-remove' aria-hidden='true'><b> Username Not Available.</b></span>";
                                    }
                                    else {
                                        var result = "<span class='text-success glyphicon glyphicon-ok' aria-hidden='true'> <b>Username Available.</b></span>";
                                    }
                                }
                                jQuery("#user-availability-status").html(result);
                                jQuery("#loaderIcon").hide();
                            },
                            error: function () { }
                        });

                    });
                    function readURL(input) {
                        if (input.files && input.files[0]) {
                            var reader = new FileReader();
                            reader.onload = function (e) {
                                jQuery('#previewHolder').attr('src', e.target.result);
                                jQuery('#previewHolder').show();
                            }

                            reader.readAsDataURL(input.files[0]);
                        }
                    }

                    jQuery("#TeacherImage").change(function () {
                        readURL(this);
                    });
                });
            </script>
        }
